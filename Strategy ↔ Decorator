Intenção
Criar uma Strategy para cada variante e fazer com que o método delegue o algoritmo para uma instância de Strategy.

Ajuda a gerenciar toda essa complexidade imposta pelas lógicas condicionais.
O Padrão Strategy sugere que se produza uma família de classes para cada variação do algoritmo e 
que se forneça para a classe hospedeira uma instância de Strategy para a qual ela delegará em tempo de execução.

Benefícios:
diminuir ou remover lógica condicional
simplificar uma classe ao mover variações de um algoritmo para uma hierarquia
habilitar um algoritmo para ser substituído por outro em tempo de execução

O padrão Strategy pode ser utilizado quando se tem as seguintes situações:

- Quando muitas classes relacionadas diferem apenas no seu comportamento;
- Quando necessita-se de variantes de um algoritmo;
- Quando se precisa ocultar do usuário a exposição das estruturas de dados complexas, específicas do algoritmo;
- Quando uma classe define muitos comportamentos e por sua vez eles aparecem como diversos “IFs”.

Estrutura:
http://videos.web-03.net/artigos/Higor_Medeiros/PadraoStrategy/PadraoStrategy1.jpg

Aplicação:
